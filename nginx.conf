events {
    worker_connections 1024;
}

http {
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/apitest.server.ivy-cloud.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/apitest.server.ivy-cloud.com/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;

        # Diffie-Hellman parameter for DHE ciphersuites
        ssl_dhparam /etc/nginx/dhparam.pem;

        # Intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds = 2 years)
        add_header Strict-Transport-Security "max-age=63072000" always;

        location = /api {
            return 403 "Access to the base URL is not allowed.";
        }

        location /api {
            # Remove the "/api" prefix for all other requests under "/api"
            rewrite ^/api(.*)$ $1 break;
            resolver 8.8.8.8;
            proxy_pass https://api.natif.ai;
            client_max_body_size 100M;
        }

        # Forward requests from "/" to "https://platform.natif.ai"
        location / {
            proxy_pass https://platform.natif.ai;  # Forward to the platform website
            proxy_set_header Host platform.natif.ai;  # Ensure the Host header matches the destination website
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}